function - to perform specific task

Two types of functions:-

1. user defined  - we will create
2. in built - python

print()
input()
format()
upper()
lower()
startswith()
extend()


functions - name , parameter ,return type

name - print
paramter - 
return - output

parameter for print:
    print(sep,end)

sep = seperator
end = endswith

Comments  ---> Non exevcutable part of program for documentation purpose
	
Input  --> to accept input from user and it always return string. So type conversion is needed for the different
           type of data.

Data type --> which kind of data is there it is specified by data type.
Variable --> it stores the value.

Example :-  c_no = 7775958 , name = "romil"

Data-Types -  
			1. Numeric - int, float, complex
			2. Sequence - str, list, tuple, range
			3. Map - dic
			4. Set - set 
			5. Boolean - bool 

Escape Sequence :
					\n	New line	                                 print("Hello\nWorld")	      Hello 
															                                      World
					\t	Tab space	                                 print("Hello\tWorld")	      Hello  World
					\\	Backslash	                                 print("C:\\Users\\Romil")    C:\Users\Romil
					\'	Single quote	                             print('It\'s fine')	      It's fine
					\"	Double quote	                             print("He said \"Hello\"")   He said "Hello"
					\r	Carriage return (moves cursor to beginning)	 print("Hello\rHi")	          Hi
					\b	Backspace	                                 print("Helloo\b")	          Hello
					\f	Form feed (new page, rarely used)	         print("Hello\fWorld")        Hello
                                                                                                  World

Programming style:

					Block - identation
					Naming convenstion

Reserve Work / Predefiened Word - Keyword

Memory Management - Heap, Stack

Type Conversion - convert 1 to another data type.

Format Function - .format , f
					print ("The addition of {} and {} is {}" .format(num1,num2,num1+num2))
					print (f"The addition of {num1} and {num2} is {num1+num2}")

Operators - 1. Arithmatic : Calculations ( +, - , * , / , % , // , **)
			2. Logical    : Compound ( AND , OR , NOT)
			3. Assignment : Assign Values ( = , += , -= , *= , /= , %= , //= , **=)
			4. Identity   : Checks if the values and type are the same ( IS , IS NOT)
			5. Membership : Presence of a value within a sequence ( IN , NOT IN)
			6. Comparision: Compare Values ( == , != , > , < , >= , <=)

Conditional Statements -  1. if
						  2. if-else
						  3. if-elif-else - mostly used for switch/match case.
						  4. Nested if-else - condition within the condition.

Match Case - mostly used for multiple choice statement.

Loops (iteration/repeatation) :  1. For-Loop - when you know the number of loops.
											       for (initialization; condition; increment/decrement) {
        													// Code to be executed
    											    }
								 2. While-Loop - when you don't know the number of loops.
								 				     while (condition) {
        													// Code to be executed
    												 }

Examples in Loop :  1. Armstrong number
					2. Fibonacci Series
					3. Prime Number
					4. Pattern
					5. Multiplication Tables

Control statements within loops:
								 1. break: Terminates the loop entirely.
								 2. continue: Skips the current iteration and proceeds to the next one.
								 3. pass :  a null operation; it does nothing. Its primary purpose is to act 
								            as a placeholder when a statement is syntactically required but no action is desired or needed.

String :  A string is a sequence of characters enclosed within single quotes (' ') or double quotes (" ").

String Methods : 1. Access String
				 2. String Slicing
				 3. String Indexing